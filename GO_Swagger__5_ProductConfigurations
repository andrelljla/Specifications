# this is draft #1 of the comprehensive WebAPI specification for interfacing with the AMDOCS Order Engine
swagger: '2.0'
info:
  title: Gateway Ordering API - AMDOCS Interface (Offers)
  description: This specification defines the interface between WebAPI and the AMDOCS Ordering Engine.
  version: "1.0.0"
# the domain of the service
host: gateway.chartercom.com
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json
paths:

  /commerce/customers/{customer-id}/product-order-id/{product-order-id}/product-configurations:
    put:
      summary: Docref W22 - Validate the Order against MEC rules
      description: The Product Configurations REST is called after the user finishes configuring all the products, and enables the user to validate the configuration and save it in the Ordering system for all the products.  The input of the Product Configurations REST includes all the active order actions in the order, and the configuration changes made for each product, to validate and save all products in the order via the Ordering system.
      parameters:
        - name: username
          in: header
          type: string
          description: authentication username for proxy connection
          required: true
        - name: password
          in: header
          type: string
          description: authentication password for proxy connection
          required: true
        - name: applicationID
          in: header
          type: string
          description: Unique designation for the invoking application (e.g. GatewayOrdering)
          required: true
        - name: timestamp
          in: header
          type: integer
          description: time the REST call was invoked, in Epoch Time format
          required: true
        - name: sc
          required: true
          in: query
          type: string
          description: Sales Channel identifier
        - name: locale
          required: true
          in: query
          type: string
          description: Locale identifier, used for language translation
        - name: customer-id
          in: path
          type: string
          required: true
          description: <dr>
        - name: product-order-id
          in: path
          type: string
          required: true
          description: <dr>
        - name: productConfigurations
          in: body
          required: true
          schema:
            $ref: '#/definitions/ImplProductConfigurationRequest'
      tags:
        - W22
      responses:
        200:
          description: Succesful order creation; return order object
          schema:
            $ref: '#/definitions/ImplProductConfigurationResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/CommonErrorReturn'

definitions:

  CommonErrorReturn:
    properties:
      lineageID:
        type: integer
        description: Unique transaction identifier; used for transactional error handling
      timestamp:
        type: integer
        description: Time that the service call was returned, in Ephoc Time format.
      errorInfo:
        type: array
        items:
          $ref: "#/definitions/CommonErrors"
  
  CommonErrors:
    properties:
      errCode:
        type: string
      errMessage:
        type: string
      errDescription:
        type: string
      errGUID:
        type: string

  implAttribute:
    properties:
      pid:
        type: string
        description: Unique Property ID (from MEC)
      propertyName:
        type: string
        description: Unique Property ID (from MEC)
      value:
        type: string
        description: <dr>
      isVisible:
        type: boolean
        description: <dr>
      isEditable:
        type: boolean
        description: <dr>
      isMandatory:
        type: boolean
        description: <dr>
       
  implComponent:
    properties:
      cid:
        type: string
        description: CatalogID of the product/component
      pcVersionID:
        type: string
        description: <dr>
      attribute:
        type: array
        items:
          $ref: '#/definitions/implAttribute'
      component:
        type: array
        items:
          $ref: '#/definitions/implComponent'
      externalAPID:
        type: string
        description: <dr>
      pricePlan:
        type: array
        items:
          $ref: '#/definitions/implPricePlan'
        description: <dr>
      relationID:
        type: string
        description: <dr>      
  
  implPricePlan:
    properties:
      cid:
        type: string
        description: CatalogID of the product/component
      pcVersionID:
        type: string
        description: <dr>
      externalAPID:
        type: string
        description: <dr>
      relationID:
        type: string
        description: <dr>      

  FlexAttributeValue:
    properties:
      integerValue:
        type: integer
        description: Integer Value
      stringValue:
        type: string
        description: String Value
      dateValue:
        type: string
        format: date
        description: Date Value
      decimalValue:
        type: number
        format: double
        description: Decimal Value
      booleanValue:
        type: boolean
        description: Boolean Value
      valueType: 
        type: string
        description: Data type for the defined attribute; only the corresponding value should be referenced.
        enum:
          - BOOLEAN
          - DATE
          - DECIMAL
          - INTEGER
          - STRING
        
  FlexAttr:
    properties:
      name:
        type: string
        description: Custom attribute name
      value: 
        type: object
        $ref: '#/definitions/FlexAttributeValue'
        description: Custom attribute value

  Attachment:
    properties:
      purpose: 
        type: string
        description: The purpose of the Attachment, valid values from Attachment Purpose. Examples might include Marketing, Training
      attachmentLocation:
        type: string
        description: A URL (or some other location string) that defines the logical location of the Attachment within some external repository
      type:
        type: string
        description: A logical type for the Attachment, valid values from AttachmentType.  Examples might include Document, Picture Contrast with mime_type, which is the technical type of the content.

  ImplCalculatedPrice:
    properties:
      sequenceId:
        type: integer
        description: Sequence ID
      ppCID:
        type: string
        description: the Price Plan Catalog ID (PP CID) automatically generated in MEC
      ppName:
        type: string
        description: the Price Plan description, free text for maintenance purposes
      pPType:
        type: string
        description: Price Plan type.  Constrained LoV [RP – retail price (regular price). Each Price Plan is associated to a retail price (the record with this PP TYPE is mandatory) DP – Percentage Discount (the record with this PP TYPE is optional) DF – Flat Discount (this amount overrides the regular price) (the record with this PP TYPE is optional) DD – Dollar Off Discount (the record with this PP TYPE is optional)]
        enum:
        - RP
        - DP
        - DF
        - DD
      tierFrom:
        type: string
        description: The discount tier’s start (in month), for example 1, meaning from the 1 month, or 13, meaning from the second year
      tierTo:
        type: string
        description: The discount tier’s end (in month), for example 12, meaning till the 12-th month (discount is applied for one year only). The value 999 will mean that discount is not limited in time
      quantityAtt:
        type: string
        description: The ID of the quantity attribute on the component. This code, which is defined in MEC for each attribute, will help the target application to find the quantity value set during the product configuration.
      quantityFrom:
        type: integer
        description: The number of the service instances from which the discount is applied.
      quantityTo:
        type: integer
        description: The number of the service instances to which the discount is applied. The value 999 will mean that discount is not limited in number of instances.
      amountType:
        type: string
        description: Type of the amount price in the next column.  Constrained LoV (OC – One-Time price, RC – Recurring price, DC – Discount)
        enum:
        - OC
        - RE
        - DC
      amount:
        type: number
        description: The value of dollar amount if the retail price, flat discount or dollar off discount, or percentage is a percentage discount
      quantity:
        type: integer
        description: Number of related price plans
      startDate:
        type: integer
        description: The Price Plan effective date Expected Date as Long (Epoch time). 
      endDate:
        type: integer
        description: The Price Plan end date Expected Date as Long (Epoch time). An empty field will mean that no expiraon date was set.
      biller:
        type: string
        description: Name of the biller (CSG)
      market:
        type: string
        description: Name fo the market
      subMarket:
        type: string
        description: Name of the submarket
      ftaFrom:
        type: string
        description: FTA from
      ftaTo:
        type: string
        description: FTA To
      custType:
        type: string
        description: Type of custoemr
      code:
        type: string
        description: Value of the CSG code
      codeType:
        type: string
        description: type of the code to be sent to the Biller (for CSG maintenance use).  Constrained LoV (I - Installation, S - Service code, P - Package code, T - Tracking code, D - Discount)
        enum:
        - I
        - S
        - P
        - T
        - D
      basicItemQuantity:
        type: integer
        description: Amount of instances of price entity
      

  TopLevelConfiguration:
    properties:
      implCalculatedPrices: 
        type: array
        items:
          $ref: '#/definitions/ImplCalculatedPrice'
        description: Prices for the TopLevelProductConfiguration as configured and maintained in the CATALOG PRICE table.  It will not be from price quoting engine.
      displayableItems:
        type: array
        items:
          $ref: '#/definitions/ProductDisplay'
        description: Contains products and Characteristic Values that are defined as related to this Configuration Group
      compatabilityStatus:
        type: string
        description: Constrained compatability status after changes are applied.
        enum:
          - BLOCKING
          - COMPATIBLE
          - INFORMATION
          - CONFIRMATION
          - NOT_CHECKED
      productID:
        type: string
        description: The catalog ID of the Product
      temporaryID:
        type: string
        description: Operation extension attribute. This attribute is used differently on an operation by operation basis when an operation requires non business data as a parameter to the operation. The operation must document explicitly how it is used. An example of its use is for the consumer technical IDentifier of new anonymous data types instances such as a product instance that has not been created yet.
      serviceID:
        type: string
        description: The Service ID of the Product
      Messages:
        type: array
        items:
          $ref: '#/definitions/RuleExceptionMessage'
        description: A message resulting from the execution of a rulebased operation. The results of these operations typically include an array of these messages.
      productSpecification:
        type: object
        $ref: '#/definitions/ProductSpecification'
        description: General catalog information and implemented information for a product.
      effectiveCatalogVersion:
        type: string
        description: The effective catalog version of the ProductSpecification this Product belongs to.
      lineOfBusiness:
        type: string
        description: Describes which LineOfBusiness the ProductSpecifications associated to this category belong to.
      productOffering:
        type: object
        $ref: '#/definitions/ProductOffering'
        description: Entity that defines the elements that can be sold.
      
  ProductDisplay:
    properties:
      implCalculatedPrices:
        type: array
        items:
          $ref: '#/definitions/ImplCalculatedPrice'
        description: Total prices for the ProductDisplay as configured and maintained in the CATALOG PRICE table. It will not be from price quoting engine.
      displayableItems:
        type: array
        items:
          $ref: '#/definitions/ProductDisplay'
        description: Products and CharacteristicValues that are defined as related to this configuration group Group.
      productID:
        type: string
        description: The catalog ID of the Product
      productSpecContainmentID:
        type: string
        description: The ID of the ProductSpecContainment between this ProductDisplay and its parent product.
      displayInformation:
        type: object
        $ref: '#/definitions/ProductSpecDisplay'
        description: How the ProductSpecification should be displayed in a user interface application.
      productSpecContainment:      
        type: object
        $ref: '#/definitions/ProductSpecContainment'
        description: The details of the ProductSpecContainment leading to the parent product.
      originalCatalogDisplayInformation:
        type: object
        $ref: '#/definitions/ProductSpecDisplay'
        description: The display information defined by in the product catalog.
      temporaryID:
        type: string
        description: Temporary ID
      implDisplayablePricePlan:      
        type: array
        items:
          $ref: '#/definitions/ImplAssignedPricePlan'
        description: List of child AssignedPricePlan of this Product.
      displayableCharacteristics:      
        type: array
        items:
          $ref: '#/definitions/CharacteristicValueDisplay'
        description: Contains Products and CharacteristicValues that are defined as related to this configuration group.
      allowedActions:
        type: array
        items:
          type: string
        description: Constrained LoV of allowed actions
        enum:
          - AMEND
          - CANCEL
          - CANCEL_OFFER
          - CANCEL_PARTIAL
          - CANCEL_REPLACE_OFFER
          - CREATE
          - DISCONTINUE
          - EDIT
          - RESUME_NEGOTIATION
          - TAKEOVER
          - WITHDRAW_AMEND
          - WITHDRAW_CANCEL
      totalDeposit:
        type: object
        $ref: '#/definitions/TotalDepositCalculationResult'
        description: The total Deposits of the Product.
      selected:
        type: boolean
        description: status
      businessType:
        type: string
        description: Constrained LoV for valid business types
        enum:
          - DEVICE
          - FRIENDS_AND_FAMILY
          - TV_CHANNEL
          - TV_PACKAGE
      serviceID:
        type: string
        description: The service ID of the Product.
      name:
        type: string
        description: Product name.
      action:
        type: string
        description: Constrained LoV for action
        enum:
          - Add
          - Remove
          - Reestablish
          - Resume
          - Suspend
          - Change
      status:
        type: string
        description: Constrained LoV for status
        enum:
          - ACTIVE
          - CEASED
          - SUSPENDED

  RuleExceptionMessage:
    properties:
      objectId:
        type: string
        description: Identifies the object that this message pertains to.
      severity:
        type: string
        description: Messag serverity
      productSpecCharacteristicID:
        type: string
        description: The ProductSpecCharacteristics used by a ProductSpecification.
      messageId:
        type: string
        description: An identifier that uniquelyidentifies this message. Used by certain applications in conjunction with RuleExecutionMessage parameters to create a truncated message suitable for some UI devices.
      ruleLevel:
        type: string
        description: Indicates the configuration level that the rule runs on. Default value will be Product. Constrained LoV for rule level (“A” - ALL_STEPS, “P”- PRODUCT, “S” - STEP)
          - A
          - P
          - S
      objectName:
        type: string
        description: <dr>
      parameters:
        type: array
        items:
          $ref: '#/definitions/FlexAttr'
        description: Named values that were used to build the message text.  Used by certain applications in conjunction with MessageId to create a truncated message suitable for some UI devices.
      text:
        type: string
        description: The message formatted in the client's locale.
      
  ProductSpecification:
    properties:
      plan:
        type: object
        $ref: '#/definitions/PriceSchema'
        description: Pricing Object
      dynamicProperties:
        type: array
        items:
          $ref: '#/definitions/FlexAttr'
        description: List of additional properties that were ssigned to the ProductSpecification
      attachments:
        type: array
        items:
          $ref: '#/definitions/Attachment'
        description: Documents associated to the ProductSpecification
      characteristics:
        type: array
        items:
          $ref: '#/definitions/ProductSpecCharacteristic'
        description: The ProductSpecCharacteristics used by a ProductSpecification
      name:
        type: string
        description: The reference number of the ProductOrderItem
      id:
        type: string
        description: The unique primary key of the ProductSpecification, together with the related ProductCatalogVersion.  A ProductSpecification is always created or changed within a given ProductCatalogVersion, it is the combination that uniquely IDentifies the fixed attributes and relations of the ProductSpecification.
      type:
        type: string
        description: The type of the ProductSpecification. A means of classification.
      level:
        type: string
        description: Level of the product i.e. whether it is GLP or not
      description:
        type: string
        description: The ID of the ProductOrderItem
      code:
        type: string
        description: The ID of the Product

  ProductOffering:
    properties:
      implCalculatedPrices:
        type: array
        items:
          $ref: '#/definitions/ImplCalculatedPrice'
        description: One time charge of an item as configured and maintained in the CATALOG PRICE table. It will not be from price quoting engine.
      dynamicProperties:
        type: array
        items:
          $ref: '#/definitions/FlexAttr'
        description: List of additional properties that are assigned to the ProductOffering
      attachments:
        type: array
        items:
          $ref: '#/definitions/Attachment'
        description: Documents that are associated with the ProductOffering
      name: 
        type: string
        description: The reference number of the ProductOrderItem
      id:
        type: string
        description: A unique IDentifier together with the related ProductOffering.version. Since a ProductOffering is always created or changed within a given CatalogVersion, it is the combination that uniquely IDentifies the fixed attributes and relations of the ProductOffering.
      bundle:
        type: boolean
        description: If value is True then the ProductOffering is a bundle. A bundle is a ProductOffering that is composed of more than one ProductSpecifications, regardless if it is more than one instance of the same product or instances of different products.
      description:
        type: string
        description: The ID of the ProductOrderItem
      code:
        type: string
        description: The ID of the Product

  ProductSpecDisplay:
    properties:
      enabled:
        type: boolean
        description: If value is True then the ProductSpecification is editable.
      dynamicProperties:
        type: array
        items:
          $ref: '#/definitions/FlexAttr'
        description: List of additional properties that were assigned to the ProductSpecDisplay.
      visible:
        type: boolean
        description: If value is True then the ProductSpecification should be displayed.
      mandatory:
        type: boolean
        description: If value is True then the ProductSpecification should be enforced as mandatory.
      showStructure:      
        type: boolean
        description: If value is True, then consumer is expected to show the structure of the Product, including ProductCharacteristics, contained Products etc. If value is false, then consumer is expected to show the Product in abbreviated form, eg just the title.

  ProductSpecContainment:
    properties:
      dynamicProperties:
        type: array
        items:
          $ref: '#/definitions/FlexAttr'
        description: List of additional properties that were assigned to the ProductSpecContainment.  Core provider software does not use these properties but specific implementations may add such properties and change behavior accordingly.
      minimumQuantity:
        type: integer
        description: The minimum number of copies of ProductSpecification that must be instantiated as Products contained withinthe parent product.
      containedProduct:
        type: object
        $ref: '#/definitions/ProductSpecification'
        description: Contained product
      defaultQuantity:
        type: integer
        description: The default number of copies of the child product that are created contained within in the parent product.  When ProductSpecContainmentcontainedProducts is an array of different ProductSpecifications then this value has no meaning.
      maximumQuantity:
        type: integer
        description: The maximum number of copies of ProductSpecification that can be instantiated as products contained within the parent product.
  
  AllowedAction:
    properties:
      allowed:
        type: boolean
        description: Indicates whether the action is allowed or not for this Product
      type:
        type: string
        description: Indicates the type of the action.  Constrained LoV (“AD”- Add, “ES” – Reestablish, “RM” – Remove, “RS” – Resume, “SU” – Suspend, “UP”- Change)
        enum:
        - AD
        - ES
        - RM
        - RS
        - SU
        - UP

  ImplAssignedPricePlan:
    properties:
      calculatedPrices:
        type: array
        items:
          $ref: '#/definitions/ImplCalculatedPrice'
        description: Total prices by type as configured and maintained in the CATALOG PRICE table. It will not be from price quoting engine. 
      displayInformation:
        type: object
        $ref: '#/definitions/PriceSchemaDisplay'
        description: The display information of the AssignedPricePlan 
      allowedActions:
        type: array
        items:
          $ref: '#/definitions/AllowedAction'
      selected:
        type: boolean
        description: This indicates whether the AssignedPricePlanDisplay is part of the Product configuration or not
      assignedPricePlanID:
        type: string
        description: A unique IDentifier of the AssignedPricePlanDisplay
      productSpecPricingID:
        type: string
        description: ID of the ProductSpecPricing
      crossProductDiscount:
        type: boolean
        description: Indicates whether this AssignedPricePlanDisplay was added to the Product as result of cross products discounts
      productSpecPricing:
        type: object
        $ref: '#/definitions/ProductSpecPricing'
        description: The details of the ProductSpecPricing leading to the parent product
      crossProductRuleDescription:      
        type: string
        description: Contain the description of the cross products discounts rule, that added this AssignedPricePlanDisplay.  If the AssignedPricePlanDisplay was not added as result of cross products discounts rule - this field will be empty.
      name:
        type: string
        description: A word, term, or phrase by which the PriceSchema is known and distinguished from other PriceSchemas
      action:
        type: object
        $ref: '#/definitions/ProductConfigurationActionType'
        description: Actions that may be done on the AssignedPricePlanDisplay
      status:
        type: string
        description: The status of the AssignedPricePlanDisplay, For example Active, Cease, Suspended.  When a Assigned AssignedPricePlanDisplay is not saved yet (catalog definition) this field will be empty.  Constrained LoV (“AC” – ACTIVE, “CE” – CEASED, “SU” - SUSPENDED)
        enum:
          - ACTIVE
          - CEASED
          - SUSPENDED

  CharacteristicValueDisplay:
    properties:
      displayInformation:
        type: object
        $ref: '#/definitions/CharacteristicDisplay'
        description: The display information of a Characteristic defined by in the product catalog
      originalCatalogDisplayInformation:
        type: object
        $ref: '#/definitions/CharacteristicDisplay'
        description: The display information of a Characteristic defined by in the product catalog 
      productSpecCharacteristicID:
        type: string
        description: The ID of the ProductSpecCharacteristic 
      productSpecCharacteristic:
        type: object
        $ref: '#/definitions/ProductSpecCharacteristic'
        description: The ProductSpecCharacteristics used by a ProductSpecification. 
      value:
        type: string
        description: A value that the Characteristic can take on. In the case of a range value, this represents the lower value of the range.  See the class notes for the formatting rules for a value whose type is other than String.
      
  TotalDepositCalculationResult:
    properties:
      actualAmount:
        type: number
        description: The total amount to be used to when paying the {@LABEL TotalDepositCalculationResult}. This amount includes any waiving or overrides
      overrideAmount:
        type: number
        description: The total of all the overrides and waives amount of the {@LABEL DepositCalculatedResult}.
      originalAmount:
        type: number
        description: The total amount to be paid as a {@LABEL TotalDepositCalculationResult} recommended by the calculation.
      currency:
        type: string
        description: The currency in which the money amounts are applied.
        enum:
        - USD

  ProductConfigurationActionType:
    properties:
      value:
        type: string
        description: Constrained LoV for configuration Action type
        enum:
          - Add
          - Remove
          - Reestablish
          - Resume
          - Suspend
          - Change

  PriceSchemaDisplay:
    properties:
      enabled:
        type: boolean
        description: If value is True then the PriceSchema is editable
      visible:
        type: boolean
        description: If value is True then the PriceSchema should be displayed
        
  ProductSpecPricing:
    properties:
      dynamicProperties:
        type: array
        items:
          $ref: '#/definitions/FlexAttr'
        description: List of additional properties that were assigned to the association.
      includeByDefault:
        type: string
        description: If value is True then the pricing is included when the Product is instantiated from the ProductSpecification.  Constrained LoV (INCLUDED_BY_DEFAULT - The element is included, but can be removed.  MANDATORY - The element is included and cannot be removed. NOT_INCLUDED_BY_DEFAULT - The element is not included and can be added).
        enum:
          - INCLUDED_BY_DEFAULT
          - MANDATORY
          - NOT_INCLUDED_BY_DEFAULT
      childPricingSchema:
        type: object
        $ref: '#/definitions/PriceSchema'
        description: The PriceSchema that defines the pricing.
      id:
        type: string
        description: A unique identifier
        
  PriceSchema:
    properties:
      dynamicProperties:
        type: array
        items:
          $ref: '#/definitions/FlexAttr'
        description: List of additional properties that were assigned to the PriceSchema
      implCalculatedPrices:
        type: array
        items:
          $ref: '#/definitions/ImplCalculatedPrice'
        description: Total Charge of an item as configured and maintained in the CATALOG PRICE table. It will not be from price quoting engine.
      marketingDescription:
        type: string
        description: URL to the marketing description of the plan
      name:
        type: string
        description: A word, term, or phrase by which the PriceSchema is known and distinguished from other PriceSchemas
      id:
        type: string
        description: A unique IDentifier.
      type:
        type: string
        description: The type of the PriceSchema.  Constrained LoV for Price Schema Type 
        enum:
          - ADDITIONAL
          - BASIC
          - PRIMARY
          - DISCOUNT
      level:
        type: string
        description: The level that the PriceSchema can be applied
      image:
        type: string
        description: URL to the image of the plan
      description:
        type: string
        description: A long textual description of the PriceSchema

  CharacteristicDisplay:
    properties:
      enabled: 
        type: boolean
        description: If True, then the Characteristic is editable.
      showHelpText:
        type: boolean
        description: If True, then help text should be displayed with the Characteristic.  The description of the Characteristic is typically used as the help text.
      dynamicProperties:
        type: array
        items:
          $ref: '#/definitions/FlexAttr'
        description: List of additional properties that were assigned to the CharacteristicDisplay.
      visible:
        type: boolean
        description: If True, then the Characteristic should be displayed.
      displayFormat:
        type: string
        description: The format for display for the Charactersitic.  Typically a user interface type of control such as a button or calendar widget.
        enum:
        - CALENDAR
        - CALENDAR_AND_TIME
        - CHECKBOX
        - DATE_ONLY
        - DROPDOWN_LISTBOX
        - LISTBOX
        - MULTI_LINE_TEXTBOX
        - RADIO_BUTTON
        - TEXTBOX
      numberOfLines:
        type: integer
        description: The vertical size that best suits the display of the Characteristic
      mandatory:
        type: boolean
        description: If True, then the Characteristic must be assigned a value.
      name: 
        type: string
        description: The name that should be used as a label for Characteristic. It is an alternative to the characteristic name.
      mask:
        type: string
        description: The display mask to be used for the Characteristic

  ProductSpecCharacteristic:
    properties:
      enabled: 
        type: boolean
        description: If True, then the Characteristic is editable.
      showHelpText:
        type: boolean
        description: If True, then help text should be displayed with the Characteristic. The description of the Characteristic is typically used as the help text.
      valueBasicType:
        type: string
        description: The underlying (basic) type of value that the CharacteristicValueType represents.  Constrained LoV for Value Basic Type (“BL”- BOOLEAN, “CH” – STRING, “CX”- COMPLEX, “DB” – DOUBLE, “DT” – DATE, “NU” - INTEGER)
        enum:
          - BL
          - CH
          - CX
          - DB
          - DT
          - NU
      valueRestriction:
        type: string
        description: Defines how the possible set of values for the CharacteristicValueType are restricted.  Constrained LoV for Value Restriction (“DI” – DISCRETE, “GE” – GENERAL, “RA” - RANGE)
        enum:
          - DI
          - GE
          - RA
      dynamicProperties:
        type: array
        items:
          $ref: '#/definitions/FlexAttr'
        description: List of additional properties that were assigned to the Characteristic
      visible:
        type: boolean
        description: If True, then the Characteristic should be displayed.
      displayFormat:
        type: string
        description: The format for display for the Charactersitic.  Typically a user interface type of control such as a button or calendar widget. Constrained LoV ()
      numberOfLines:
        type: integer
        description: The vertical size that best suits the display of the Characteristic.
      mandatory:
        type: boolean
        description: If True, then the Characteristic should be assigned
      name: 
        type: string
        description: Free format short textual description.
      defaultValue:
        type: object
        $ref: '#/definitions/CharacteristicValue'
        description: Represents the default value that is placed into the CharacteristicValue when a ConfigurableCharacteristic is instanciated.
      length:
        type: integer
        description: Maximum length of the value
      id:
        type: string
        description: A unique IDentifier
      mask:
        type: string
        description: The display mask to be used for the characteristic
      values:
        type: array
        items:
          $ref: '#/definitions/CharacteristicValue'
        description: Represents the set of valid values of a characteristic which valueType is DISCRETE or the set of valid ranges of a Characteristic which valueType is RANGE.
      description:
        type: string
        description: Characteristic description.
      code: 
        type: string
        description: A value that the characteristic can take on.  In the case of a range value, this represents the lower value of the range. See the class notes for the formatting rules for a value whose type is other than String.
      
  CharacteristicValue:
    properties: 
      valueForDisplay:
        type: string
        description: A representation of the value suitable for display to human users.  For example in Amdocs Shared Product Information Model, represents the decode (translation into current national language) where the value is a code. For example, a code AC might be used to represent Active state of a Product the English decode would be Active.
      valueTo:
        type: string
        description: The upper range value that a range-type Characteristic can take on.  See the class notes for the formatting rules for a value whose type is other than String.
      valueFrom:
        type: string
        description: A value that the Characteristic can take on. In the case of a range value, this represents the lower value of the range.  See the class notes for the formatting rules for a value whose type is other than String.

  ImplProductConfigurationRequest:
    properties:
      implValidateAndUpdateMultiProductsConfigurationRequest:
        type: object
        $ref: '#/definitions/ImplValidateAndUpdateMultiProductsConfigurationRequest'
      serviceabilityObject:
        type: object
        $ref: '#/definitions/ServiceabilityObject'
        
  ImplValidateAndUpdateMultiProductsConfigurationRequest:
    properties:
      activityforConfiguration:
        type: string
        description: If empty then it is taken from configuration parameter.  Out of Box this is the Negotiate Product Configuration
      configurationLevel:
        type: string
        description: The level of configuration to be returned.  Charter must always send FULL
      settingsView:
        type: string
        description: The Settings View Filter of the ProductSpecifications.  Charter should always send ‘FULL’
      productOrderItems:
        type: array
        items:
          $ref: '#/definitions/ChangedProductOrderItem'
      confirmationMessagesApproved:
        type: boolean
        description: Indication whether the user approved rule messages (productConfiguration.messages) with CONFIRMATION as {@PATH RuleExecutionMessage.severity}.  Default is false

  ChangedProductOrderItem:
    properties:
      productOrderItemID:
        type: string
        description: IDs of all product order items that needs to be validated
      productID:
        type: string
        description: Product order ID
      productChanges:
        type: object
        $ref: '#/definitions/ProductConfigurationChanges'
          
  ProductConfigurationChanges:
    properties:
      suspendedContainedProducts:
        type: array
        items:
          $ref: '#/definitions/SuspendContainedProduct'
        description: Contained Products that were suspended
      changedSimpleProducts:
        type: array
        items:
          $ref: '#/definitions/ChangedSimpleProduct'
        description: Simple products that were modified
      implNewAssignedPricePlan:
        type: array
        items:
          $ref: '#/definitions/ImplAddedAssignedPricePlan'
        description: new AssignedPricePlan that were added to the Product configuration
      newSimpleProducts:
        type: array
        items:
          $ref: '#/definitions/AddedSimpleProduct'
        description: New simple Products that were added to the Product configuration.  Tagged NOT IN USE.
      resumedContainedProducts:
        type: array
        items:
          $ref: '#/definitions/ResumeContainedProduct'
        description: Contained Products that were resumed.  Tagged NOT IN USE.
      changedContainedProducts:
        type: array
        items:
          $ref: '#/definitions/ChangeContainedProduct'
        description: Contained Products that were modified (includes configuration changes)
      removedSimpleProducts:
        type: array
        items:
          $ref: '#/definitions/RemovedSimpleProduct'
        description: Hold information required for removed simple products.  Tagged NOT IN USE.
      implRemovedAssignedPricePlan:
        type: array
        items:
          $ref: '#/definitions/ImplRemovedAssignedPricePlan'
        description: AssignedPricePlan that were removed from the Product configuration
      removedContainedProducts:
        type: array
        items:
          $ref: '#/definitions/RemovedContainedProduct'
        description: Contained Products that were removed from the Product configuration
      newContainedProducts:
        type: array
        items:
          $ref: '#/definitions/AddedContainedProduct'
        description: new contained Products that were added to the Product configuration    

  SuspendContainedProduct:
    properties:
      productID:
        type: string
        description: ID of suspended contained product

  ChangedSimpleProduct:
    properties:
      productID:
        type: string
        description: ID of changed simple product
      parentTemporaryID:
        type: string
        description: Used if a contained product is added/changed in quantity and each instance needs to be updated differently but the contained product instance is not assigned yet (meaning there is no AP ID). The parentTemporaryID is generated by the consumer (same as temporaryID).  Tagged NOT IN USE.
      parentSpecContainmentID:
        type: string
        description: The ID of the ProductSpecContainment. Used if the change is done on a contained Product added by default and not assigned yet. Must be sent if productID is not sent as input.  Tagged NOT IN USE.
      temporaryID:
        type: string
        description: It is a unique ID generated by the consumer that enables the consumer to IDentify the added component in the output. it serves as the consumer IDentifier for entities that do not have an ID yet.  Tagged NOT IN USE.
      changedCharacteristics:
        type: array
        items:
          $ref: '#/definitions/CharacteristicValueChange'
        description: Characteristics that have been changed by ID and value.
      simpleProductSpecID:
        type: string
        description: Unique IDentifier of the simple product specification
      parentProductSpecContainmentID:
        type: string
        description: The ID of the relation to the parent of the added contained product. Used when Contained Products need to be added in quantity with different configuration.  Tagged NOT IN USE.

  CharacteristicValueChange:
    properties:
      characteristicID:
        type: string
        description: Characteristic ID
      value:
        type: string
        description: New characteristic value

  ImplAddedAssignedPricePlan:
    properties:
      parentTemporaryID:
        type: string
        description: This temporary ID is generated by the consumer
      productSpecPricingID:
        type: string
        description: It is the ID of the ProductSpecPricing.  The specification of pricing for the  ProductSpecification. For example associated price plans or activity charges. The definition of the pricing is in the associated PriceSchema or ActivityCharge
      parentProductSpecContainmentID:
        type: string
        description: This is the catalog ID of the relation between price and its parent component
      parentProductID:
        type: string
        description: Assigned Parent component ID.

  AddedSimpleProduct:
    properties:
      parentTemporaryID:
        type: string
        description: Used if a contained product is added/changed in quantity and each instance needs to be updated differently but the contained product instance is not assigned yet (meaning there is no AP ID). The parentTemporaryID is generated by the consumer (same as temporaryID)
      productSpecContainmentID:
        type: string
        description: The ID of the ProductSpecContainment of the ProductSpecification to be added.
      temporaryID:
        type: string
        description: It is a unique ID generated by the consumer that enables the consumer to IDentify the added component in the output.  It serves as the consumer IDentifier for entities that do not have an ID yet.
      changedCharacteristics:
        type: array
        items:
          $ref: '#/definitions/CharacteristicValueChange'
        description: Characteristics that have been changed by ID and value.
      businessType:
        type: string
        description: Indicates the SimpleProduct type. The relevant values are...
        enum:
          - DEVICE
          - FRIENDS_AND_FAMILIY
          - TV_CHANNEL
          - TV_PACKAGE
      simpleProductSpecID:
        type: string
        description: Unique IDentifier of the simple product specification
      parentProductSpecContainmentID:
        type: string
        description: The ID of the relation to the parent of the added contained product. Used when Contained Products need to be added in quantity with different configuration.
      parentProductID:
        type: string
        description: The parent product ID
        
  ResumeContainedProduct:
    properties:
      productID:
        type: string
        description: ID of resumed contained product
      changedCharacteristics:
        type: array
        items:
          $ref: '#/definitions/CharacteristicValueChange'
        description: Characteristics that have been changed by ID and value.

  ChangeContainedProduct:
    properties:
      productID:
        type: string
        description: Product ID (ap id of this component)
      parentTemporaryID:
        type: string
        description: Used if a contained product is added/changed in quantity and each instance needs to be updated differently but the contained product instance is not assigned yet (meaning there is no AP ID). The parentTemporaryID is  generated by the consumer (same as temporaryID).
      productSpecContainmentID:
        type: string
        description: The ID of the ProductSpecContainment.  Used if the change is made on a contained  product, added by default and not assigned yet.
      temporaryID:
        type: string
        description: It is a unique ID generated by the consumer that enables the consumer to identify the added component in the output. It serves as the consumer  identifier for entities that do not have an ID yet.
      changedCharacteristics:
        type: array
        items:
          $ref: '#/definitions/CharacteristicValueChange'
        description: Characteristics that have been changed by ID and value.
      parentProductSpecContainmentID:
        type: string
        description: The ID of the relation to the parent of the added contained product. Used when Contained Products need to be added in quantity with different configuration.

  RemovedSimpleProduct:
    properties:
      productID:
        type: string
        description: Product ID
      parentTemporaryID:
        type: string
        description: Parent temporary ID
      productSpecContainmentID:
        type: string
        description: The ID of the ProductSpecContainment. Used if the change is done on a contained Product added by default and not assigned yet. Must be sent if productID is not sent as input.
      simpleProductSpecID:      
        type: string
        description: Uniqueidentifier of the new simple ProductSpecification.

  ImplRemovedAssignedPricePlan:
    properties:
      parentTemporaryID:
        type: string
        description: Operation extension attribute. Used as the consumer technical Identifier of a parent product entity.
      assignedPricePlanID:
        type: string
        description: The ID of an assigned instance of ProductSpecPricing. Mandatory if RemovedAssignedPricePlan.productSpecPricingID is not provided.  To be used if an assigned ProductSpecPricing needs to be removed.  If there are two assigned instances of the same ProductSpecPricing in the Product configuration the first one with this ID is removed.
      productSpecPricingID:
        type: string
        description: The catalog ID of the relation between the component and the assigned profile.
        
  RemovedContainedProduct:
    properties:
      productID:
        type: string
        description: Product ID
      parentTemporaryID:
        type: string
        description: Parent temporary ID
      productSpecContainmentID:
        type: string
        description: The ID of the ProductSpecContainment.  Used if the change is done on a contained Product added by default and not assigned yet. Must be sent if productID is not sent as input

  AddedContainedProduct:
    properties:
      parentTemporaryID:
        type: string
        description: Used if a contained product is added /changed in quantity and each instance needs to be updated differently but the contained product instance is not assigned yet (meaning there is no AP ID). The parentTemporaryID is generated by the consumer (same as temporaryID).
      productSpecContainmentID:
        type: string
        description: The ID of the ProductSpecContainment of the ProductSpecification to be added.
      temporaryID:
        type: string
        description: It is a unique ID generated by the consumer that enables the consumer to IDentify the added component in the output. It serves as the consumer IDentifier for entities that do not have an ID yet. Should start with ‘C’.
      changedCharacteristics:
        type: array
        items:
          $ref: '#/definitions/CharacteristicValueChange'
        description: Characteristics that have been changed by ID and value.
      parentProductSpecContainmentID:
        type: string
        description: The ID of the relation to the parent of the added contained product. Used when Contained Products need to be added in quantity with different configuration.
      productSpecID:
        type: string
        description: The ID of the ProductSpecification that needs to be added. Should be populated if AddedContainedProduct.productSpecContainmentID is not sent as input.  This attribute is used by consumers if there is only one instance of the ProductSpecification in the catalog tree.  If more than one instance exists, the ProductSpecification will be added as a first found instance. 
      parentProductID:
        type: string
        description: Parent product ID.

  ImplValidateMultiProductConfigurationResponse:
    properties:
      productConfigurations:
        type: array
        items:
          $ref: '#/definitions/ValidateProductConfigurationResponse'
    
  ValidateProductConfigurationResponse:
    properties:
      productOrderID:
        type: string
        description: Product order ID
      productOrderItemID:
        type: string
        description: The ID of the ProductOrderItem
      productOrderItemReferenceNumber:
        type: string
        description: The reference number of the ProductOrderItem
      productConfiguration:
        type: array
        items:
          $ref: '#/definitions/TopLevelConfiguration'
        description: Product configuration
      productID:
        type: string
        description: The ID of the Product

  ServiceabilityObject:
    properties:
      sys:
        type: string
        description: Value of SYS
      prin:
        type: string
        description: Value of PRIN
      agent:
        type: string
        description: Value of AGENT
      LOBServiceability:
        type: array
        items:
          $ref: '#/definitions/LOBServiceability'
      availabilityGroup:
        type: string
        description: Parameter used for phone
      dwellType:
        type: string
        description: Type used for competitive area     
      customerIsNew:
        type: boolean
        description: Indicator to indicate whether this is a new (TRUE) or existing (FALSE) customer
      customerHasActiveAccount:
        type: boolean
        description: Indicator to indicate whether the customer has n active account (TRUE) or not (FALSE)
      customerType:
        type: string
        description: Business or Residential - all Residential in current release
        enum:
        - Business
        - Residential
      orderActionType:
        type: string
        description: Constrained LoV for Action Type (CH - Change, CE - Cease, SU - Suspend, HM - Change Move, RT - Restart, CR - Cease Restart, PR - Provide)
        enum:
        - CH
        - CE
        - SU
        - HM
        - RT
        - CR
        - PR
      userRole:
        type: string
        description: User Role (CSR or manager)
        enum: 
        - manager
        - CSR
      offerCode:
        type: array
        items: 
          type: string
        description: list of specific offer codes or IDs
      additional attributes:
        type: array
        items:
          $ref: '#/definitions/AdditionalAttribute'
        description: If some of the parameters for eligibility rules/serviceability are necessary (and were not in the initial list) can be added here

  LOBServiceability:
    properties:
      LOBName:
        type: string
        description: Line Of Business name
      LOBServiceStatus:
        type: string
        description: An indication if the LOB is serviceable or not

  AdditionalAttribute:
    properties:
      name:
        type: string
        description: Custom attribute name
      value: 
        type: string
        description: Custom attribute value

  ImplProductConfigurationResponse:
    properties:
      transcationID:
        type: integer
        description: Unique transaction identifier; used for transactional error handling
      timestamp:
        type: integer
        description: Time that the service call was returned, in Epoch time format
      implValidateMultiProductConfigurationResponse:
        type: array
        items:
          $ref: '#/definitions/ImplValidateMultiProductConfigurationResponse'
        description: Main payload output
      implErrorInfo:
        type: array
        items:
          $ref: '#/definitions/ImplErrorInfo'
        description: Used for business errors

  ImplErrorInfo:
    properties:
      errorCode:
        type: string
        description: Error code; single string.
      description:
        type: string
        description: Error description.
      errorMessage:
        type: string
        description: Human-readable error message.
      errorUUID:
        type: string
        description: Unique identifier for the error instance.
